/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description Tenant ID to scope the search
                         * @example tenant123
                         */
                        tenantId: string;
                        /**
                         * @description Title of the document, provided by the user
                         * @example My Document
                         */
                        title: string;
                        /**
                         * @description source of the document
                         * @default upload
                         * @example upload
                         * @enum {string}
                         */
                        source?: "upload" | "url" | "api";
                        /**
                         * @description MIME type of the document
                         * @example application/pdf
                         */
                        mimeType?: string;
                        /**
                         * @description Document content
                         * @example Test content
                         */
                        content?: string;
                    };
                };
            };
            responses: {
                /** @description Queued */
                202: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description A unique identifier string
                             * @example doc123
                             */
                            id: string;
                            /**
                             * @default queued
                             * @enum {string}
                             */
                            status: "indexed" | "queued" | "failed";
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Bad Request
                             */
                            error: string;
                            /**
                             * @description API Error format
                             * @example VALIDATION_ERROR
                             */
                            code?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query: {
                    /** @description Tenant ID to scope the search */
                    tenantId: string;
                    q: string;
                    /** @description Maximum number of results to return */
                    limit?: number;
                    /** @description Number of results to skip for pagination */
                    offset?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Total number of matched items
                             * @example 100
                             */
                            total: number;
                            items: {
                                /**
                                 * @description A unique identifier string
                                 * @example abc123
                                 */
                                id: string;
                                /** @example typescript documentation 1 */
                                title: string;
                                /**
                                 * @description A short snippet of the matched content
                                 * @example TypeScript is a typed superset of JavaScript that compiles to plain JavaScript...
                                 */
                                snippet?: string;
                                /**
                                 * @description Relevance score for ranking
                                 * @example 0.95
                                 */
                                score?: number;
                                /**
                                 * @description Link to the full document or resource
                                 * @example https://www.typescriptlang.org/docs/
                                 */
                                url?: string;
                            }[];
                            /**
                             * @description Page number, starting from 1
                             * @default 1
                             * @example 1
                             */
                            page: number;
                            /**
                             * @description Number of items per page, max 100
                             * @default 10
                             * @example 10
                             */
                            pageSize: number;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Bad Request
                             */
                            error: string;
                            /**
                             * @description API Error format
                             * @example VALIDATION_ERROR
                             */
                            code?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/tenants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description Name of the tenant
                         * @example Software Inc
                         */
                        name: string;
                    };
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Tenant ID
                             * @example tenant123
                             */
                            id: string;
                            /**
                             * @description Name of the tenant
                             * @example Software Inc
                             */
                            name: string;
                            /** Format: date-time */
                            createdAt?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Tenant ID
                             * @example tenant123
                             */
                            id: string;
                            /**
                             * @description Name of the tenant
                             * @example Software Inc
                             */
                            name: string;
                            /** Format: date-time */
                            createdAt?: string;
                            /** Format: date-time */
                            updatedAt?: string;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Bad Request
                             */
                            error: string;
                            /**
                             * @description API Error format
                             * @example VALIDATION_ERROR
                             */
                            code?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
