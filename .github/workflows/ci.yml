name: CI

on:
  push:
    branches: ["**"]
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    env:
      TURBO_TELEMETRY_DISABLED: 1
      DATABASE_URL: postgresql://searchhub:searchhub@localhost:5432/searchhub
      REDIS_URL: redis://localhost:6379
      API_RATE_LIMIT_WINDOW_MS: 60000
      API_RATE_LIMIT_MAX: 100
      API_BREAKER_FAILURE_THRESHOLD: 5
      API_BREAKER_RESET_TIMEOUT_MS: 30000
      API_BREAKER_HALF_OPEN_TIMEOUT_MS: 5000
      VOYAGE_API_KEY: placeholder
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Start infrastructure
        run: |
          set -euo pipefail
          docker compose -f infra/docker-compose.yml up -d
          for _ in $(seq 1 30); do
            if docker compose -f infra/docker-compose.yml exec -T postgres pg_isready -U searchhub -d searchhub; then
              ready=1
              break
            fi
            sleep 2
          done
          if [ "${ready:-0}" != "1" ]; then
            echo "Postgres did not become ready in time" >&2
            exit 1
          fi
          docker compose -f infra/docker-compose.yml exec -T redis redis-cli ping

      - name: Cache Turbo outputs
        uses: actions/cache@v4
        with:
          path: |
            .turbo
            node_modules/.cache/turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/package.json', 'pnpm-lock.yaml', 'turbo.json') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Generate Prisma client
        run: pnpm prisma:gen

      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Test
        run: pnpm test

      - name: Stop infrastructure
        if: always()
        run: docker compose -f infra/docker-compose.yml down -v
